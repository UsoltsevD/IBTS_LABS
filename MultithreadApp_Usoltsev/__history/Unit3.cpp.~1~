//---------------------------------------------------------------------------

#include <System.hpp>
#pragma hdrstop

#include "Unit3.h"
#pragma package(smart_init)
//---------------------------------------------------------------------------

//   Important: Methods and properties of objects in VCL can only be
//   used in a method called using Synchronize, for example:
//
//      Synchronize(&UpdateCaption);
//
//   where UpdateCaption could look like:
//
//      void __fastcall ProcessThread::UpdateCaption()
//      {
//        Form1->Caption = "Updated in a thread";
//      }
//---------------------------------------------------------------------------

__fastcall ProcessThread::ProcessThread(TEvent* myEvent, bool CreateSuspended)
	: TThread(CreateSuspended), myEvent(myEvent)
{
	FreeOnTerminate = true;
}
//---------------------------------------------------------------------------
void __fastcall ProcessThread::Execute()
{
	i = 0;
	while(true)
	{
		//ожидание, когда флаг будет установлен
		if(myEvent->WaitFor(0) == wrSignaled)
		{
			//Принять данные
			Sleep(50);


			//Сброс флага
			myEvent->ResetEvent();
		}

		//Ресурсоемкая операция обработки данных
		Sleep(200);

		// Завершить поток по требованию
		if(Terminated) break;
		Synchronize(&UpdateLabel);
		i++;
	}
}
//---------------------------------------------------------------------------
void __fastcall ProcessThread::UpdateLabel()
{
	Form1->Label2->Caption = UnicodeString(i);
}
